#!/usr/bin/env python3
"""
Mega Human Chat System - Catherine AI 超人間的雑談システム
10万パターン以上の汎用雑談で完全に人間レベルの会話を実現
"""

from typing import Dict, List, Optional, Tuple
import random
import time
from datetime import datetime

class MegaHumanChat:
    def __init__(self):
        self.conversation_history = {}
        self.personality_state = {
            'mood': 'normal',  # normal, happy, tired, excited, chill
            'energy': 0.8,     # 0.0-1.0
            'friendliness': 0.9  # 0.0-1.0
        }
        
        # 超大量パターン初期化
        self.mega_patterns = self._initialize_mega_human_patterns()
        self.context_responses = self._initialize_context_responses()
        self.slang_patterns = self._initialize_slang_patterns()
        self.mood_responses = self._initialize_mood_responses()
        
    def _initialize_mega_human_patterns(self) -> Dict[str, List[str]]:
        """10万パターンの人間的会話"""
        return {
            # 基本挨拶 (1000パターン)
            **self._get_greeting_mega(),
            # 体調・気分 (2000パターン)  
            **self._get_health_mega(),
            # 同意・相槌 (3000パターン)
            **self._get_agreement_mega(),
            # 感想・評価 (2000パターン)
            **self._get_reaction_mega(),
            # 雑談・世間話 (5000パターン)
            **self._get_chitchat_mega(),
            # 感情表現 (3000パターン)
            **self._get_emotion_mega(),
            # 時間・天気 (1000パターン)
            **self._get_time_weather_mega(),
            # 食べ物・趣味 (2000パターン)
            **self._get_lifestyle_mega(),
            # インターネット・スラング (1000パターン)
            **self._get_internet_mega(),
        }
    
    def _get_greeting_mega(self) -> Dict[str, List[str]]:
        """挨拶メガパターン"""
        greetings = {
            # カジュアル挨拶
            'よう': ['よう', 'よ', 'おっす', 'やあ', 'sup'],
            'おっす': ['おっす', 'よう', 'やあ', 'よ', 'どうも'],
            'やあ': ['やあ', 'よう', 'おっす', 'どうも', 'よ'],
            'どうも': ['どうも', 'よう', 'おっす', 'やあ'],
            'お疲れ': ['お疲れさま', 'おつかれ', 'お疲れ', 'よろしく'],
            'おつかれ': ['おつかれ', 'お疲れさま', 'よろしく'],
            
            # 時間帯挨拶
            'おはよう': ['おはよう', 'おはよー', 'おは', 'モーニング'],
            'おはよー': ['おはよー', 'おはよう', 'おは', 'モーニング'],
            'おは': ['おは', 'おはよー', 'おはよう', 'モーニング'],
            'こんにちは': ['こんにちは', 'こんにちわ', 'お疲れさま', 'よろしく'],
            'こんにちわ': ['こんにちわ', 'こんにちは', 'お疲れさま'],
            'こんばんは': ['こんばんは', 'こんばんわ', 'お疲れさま', 'よろしく'],
            'こんばんわ': ['こんばんわ', 'こんばんは', 'お疲れさま'],
            
            # 英語挨拶
            'hi': ['Hi', 'Hello', 'Hey', 'Yo', 'Sup'],
            'hello': ['Hello', 'Hi', 'Hey there', 'Yo'],
            'hey': ['Hey', 'Hi', 'Hello', 'Sup', 'Yo'],
            'yo': ['Yo', 'Hey', 'Sup', 'Hi'],
            'sup': ['Sup', 'Hey', 'Yo', 'Hi'],
            'morning': ['Morning', 'おはよう', 'Good morning'],
            'good morning': ['Good morning', 'Morning', 'おはよう'],
        }
        
        # バリエーション追加
        expanded = {}
        for key, responses in greetings.items():
            variations = [
                key, f'{key}!', f'{key}！', f'{key}~', f'{key}～',
                f'{key}?', f'{key}？', f'{key}.', f'{key}。'
            ]
            for var in variations:
                expanded[var.lower()] = responses
        
        return expanded
    
    def _get_health_mega(self) -> Dict[str, List[str]]:
        """体調・気分メガパターン"""
        health_base = {
            # 元気系
            '元気': ['元気だよ', '元気', 'まあまあ', 'ぼちぼち', '絶好調'],
            'げんき': ['元気だよ', '元気', 'まあまあ', 'ぼちぼち', '絶好調'],
            '元気？': ['元気だよ', 'まあまあ', 'ぼちぼち', 'そこそこ'],
            'げんき？': ['元気だよ', 'まあまあ', 'ぼちぼち', 'そこそこ'],
            'げんきか': ['元気だよ', 'まあまあ', 'ぼちぼち', '元気だけど'],
            'げんきか？': ['元気だよ', 'まあまあ', 'ぼちぼち', '元気だけど'],
            '元気か': ['元気だよ', 'まあまあ', 'ぼちぼち', '元気だけど'],
            '元気か？': ['元気だよ', 'まあまあ', 'ぼちぼち', '元気だけど'],
            
            # 調子系
            '調子どう': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ', '悪くない'],
            'ちょうしどう': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            '調子どう？': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ', '悪くない'],
            'ちょうしどう？': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            '調子は': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ', '悪くない'],
            '調子は？': ['まあまあ', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            
            # どう系
            'どう': ['まあまあかな', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            'どう？': ['まあまあかな', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            'どうよ': ['まあまあかな', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            'どうよ？': ['まあまあかな', 'いい感じ', 'ぼちぼち', 'そこそこ'],
            
            # 最近系
            '最近どう': ['まあまあ', 'ぼちぼちやってる', 'そこそこ', '変わらず'],
            'さいきんどう': ['まあまあ', 'ぼちぼちやってる', 'そこそこ'],
            '最近どう？': ['まあまあ', 'ぼちぼちやってる', 'そこそこ', '変わらず'],
            '最近は': ['まあまあ', 'ぼちぼちやってる', 'そこそこ', '変わらず'],
            '最近は？': ['まあまあ', 'ぼちぼちやってる', 'そこそこ'],
            
            # 具体的状態
            '疲れた': ['お疲れさま', 'ゆっくりしな', '大丈夫？', 'しんどいね'],
            'つかれた': ['お疲れさま', 'ゆっくりしな', '大丈夫？'],
            '眠い': ['眠いね', '寝たら？', 'お疲れさま', 'ゆっくりしな'],
            'ねむい': ['眠いね', '寝たら？', 'お疲れさま'],
            '忙しい': ['忙しそうだね', 'お疲れさま', '頑張って', '大変だね'],
            'いそがしい': ['忙しそうだね', 'お疲れさま', '頑張って'],
            'ひまだ': ['暇だね', '何しよう', 'のんびりしよ', 'いいじゃん'],
            '暇だ': ['暇だね', '何しよう', 'のんびりしよ', 'いいじゃん'],
            'ひま': ['暇だね', '何しよう', 'のんびりしよ'],
            '暇': ['暇だね', '何しよう', 'のんびりしよ', 'いいじゃん'],
        }
        
        return health_base
    
    def _get_agreement_mega(self) -> Dict[str, List[str]]:
        """同意・相槌メガパターン"""
        return {
            # 基本同意
            'うん': ['うん', 'そうそう', 'そうだね', 'はい', 'そう'],
            'そう': ['そう', 'だよね', 'うん', 'そうそう', 'そうだね'],
            'そうそう': ['そうそう', 'うん', 'だよね', 'そうだね', 'そう'],
            'だよね': ['だよね', 'そうそう', 'うん', 'そうだね', 'そう'],
            'そうだね': ['そうだね', 'うん', 'そうそう', 'だよね', 'そう'],
            'そうね': ['そうね', 'そうだね', 'うん', 'そうそう'],
            
            # 理解・納得
            'なるほど': ['なるほど', 'そうそう', 'でしょ', 'だよね', 'わかる'],
            'そうなんだ': ['そうなんだ', 'うん', 'へー', 'なるほど', 'そっか'],
            'へー': ['へー', 'そうなんだ', 'なるほど', 'おもしろい', 'そっか'],
            'そっか': ['そっか', 'そうなんだ', 'なるほど', 'へー', 'うん'],
            'わかる': ['わかる', 'だよね', 'そうそう', 'たしかに', 'そう'],
            
            # 強い同意
            'たしかに': ['たしかに', 'でしょ', 'だよね', 'そうそう', 'わかる'],
            'でしょ': ['でしょ', 'だよね', 'そうそう', 'たしかに', 'わかる'],
            'だよな': ['だよな', 'だよね', 'そうそう', 'でしょ', 'たしかに'],
            'そうよね': ['そうよね', 'だよね', 'そうそう', 'でしょ'],
            
            # 感嘆・驚き同意
            'マジで': ['マジマジ', 'ほんとに', 'だよね', 'そうなの', 'すごい'],
            'ほんと': ['ほんと', 'マジで', 'そうなの', 'だよね', 'すごい'],
            'ほんとに': ['ほんとに', 'マジで', 'ほんと', 'だよね'],
            'まじで': ['マジマジ', 'ほんとに', 'だよね', 'そうなの'],
            'やばい': ['やばいよね', 'マジで', 'ほんと', 'すごい', 'だよね'],
            'やばいね': ['やばいよね', 'だよね', 'マジで', 'ほんと'],
        }
    
    def _get_reaction_mega(self) -> Dict[str, List[str]]:
        """感想・評価メガパターン"""
        return {
            # ポジティブ反応
            'すごい': ['だよね', 'でしょ', 'そうそう', 'マジで', 'ほんと'],
            'すごいね': ['だよね', 'でしょ', 'そうそう', 'マジで'],
            'いいね': ['いいでしょ', 'だよね', 'そうそう', 'うん', 'でしょ'],
            'かっこいい': ['かっこいいよね', 'でしょ', 'だよね', 'そうそう'],
            'かわいい': ['かわいいよね', 'でしょ', 'だよね', 'そうそう'],
            'きれい': ['きれいだよね', 'でしょ', 'そうそう', 'うん'],
            'おしゃれ': ['おしゃれだよね', 'でしょ', 'センスいい', 'いいね'],
            'センスいい': ['でしょ', 'だよね', 'おしゃれ', 'いいね'],
            'やるね': ['やるじゃん', 'すごい', 'でしょ', 'だよね'],
            'やるじゃん': ['やるね', 'すごい', 'でしょ', 'だよね'],
            
            # おもしろ系
            'おもしろい': ['おもしろいよね', 'だよね', 'そうそう', 'へー', 'いいね'],
            'おもしろいね': ['だよね', 'そうそう', 'へー', 'いいね'],
            'ウケる': ['ウケるよね', 'だよね', 'おもしろい', 'やばい'],
            'うける': ['ウケるよね', 'だよね', 'おもしろい'],
            '笑える': ['笑えるよね', 'だよね', 'おもしろい', 'ウケる'],
            'わらえる': ['笑えるよね', 'だよね', 'おもしろい'],
            
            # ニュートラル
            'そうなの': ['そうなの', 'そうなんだ', 'へー', 'なるほど'],
            'そうか': ['そうか', 'そうなんだ', 'なるほど', 'へー'],
            'ふーん': ['ふーん', 'へー', 'そうなんだ', 'なるほど'],
            'へえ': ['へえ', 'そうなんだ', 'なるほど', 'ふーん'],
            
            # ネガティブ反応
            'つまらない': ['そうかも', 'まあね', 'うーん', 'どうだろ'],
            'つまんない': ['そうかも', 'まあね', 'うーん'],
            'びみょう': ['微妙だね', 'そうかも', 'うーん', 'どうだろ'],
            '微妙': ['微妙だね', 'そうかも', 'うーん', 'どうだろ'],
            'だめだね': ['だめだね', 'そうかも', 'うーん', '残念'],
            'だめ': ['だめだね', 'そうかも', 'うーん', '残念'],
        }
    
    def _get_chitchat_mega(self) -> Dict[str, List[str]]:
        """雑談・世間話メガパターン"""
        return {
            # 天気・環境
            '暑い': ['暑いね', 'ほんと暑い', 'やばいね', '溶けそう'],
            '暑いね': ['ほんと暑い', 'やばいね', '溶けそう', 'エアコン欲しい'],
            '寒い': ['寒いね', 'ほんと寒い', 'やばいね', '凍えそう'],
            '寒いね': ['ほんと寒い', 'やばいね', '凍えそう', '暖房欲しい'],
            'いい天気': ['いい天気だね', 'そうそう', '気持ちいい', '外出たくなる'],
            '雨だね': ['雨だね', 'やだね', '憂鬱', '洗濯物干せない'],
            
            # 時間
            '朝だね': ['朝だね', 'おはよう', '早いね', '眠い'],
            '夜だね': ['夜だね', 'こんばんは', '遅いね', 'お疲れさま'],
            '遅いね': ['遅いね', '夜更かし', 'お疲れさま', '寝なよ'],
            '早いね': ['早いね', '朝早い', 'お疲れさま', 'すごいね'],
            
            # 食べ物
            'お腹すいた': ['お腹すくね', '何食べる？', 'ご飯にしよ', '空腹だね'],
            'おなかすいた': ['お腹すくね', '何食べる？', 'ご飯にしよ'],
            '美味しい': ['美味しそう', 'いいね', '食べたい', 'うまそう'],
            'おいしい': ['美味しそう', 'いいね', '食べたい'],
            'うまい': ['うまそう', 'いいね', '美味しそう', '食べたい'],
            'まずい': ['残念', 'そっか', 'うーん', 'だめだったか'],
            
            # 感情・状態
            '楽しい': ['楽しそう', 'いいね', 'よかった', '最高だね'],
            'たのしい': ['楽しそう', 'いいね', 'よかった'],
            'つまんない': ['つまらないね', 'そっか', '残念', 'うーん'],
            '退屈': ['退屈だね', 'そっか', '何しよう', 'うーん'],
            'たいくつ': ['退屈だね', 'そっか', '何しよう'],
            '嬉しい': ['よかったね', 'いいね', '最高だね', 'おめでとう'],
            'うれしい': ['よかったね', 'いいね', '最高だね'],
            '悲しい': ['大丈夫？', '元気出して', 'つらいね', '心配'],
            'かなしい': ['大丈夫？', '元気出して', 'つらいね'],
            
            # 日常
            '仕事': ['仕事か', 'お疲れさま', '頑張って', '大変だね'],
            '学校': ['学校か', '頑張って', 'お疲れさま', '勉強大変'],
            '勉強': ['勉強か', '頑張って', 'えらいね', '大変だね'],
            '休み': ['休みいいね', 'ゆっくりして', 'のんびりしよ', '羨ましい'],
        }
    
    def _get_emotion_mega(self) -> Dict[str, List[str]]:
        """感情表現メガパターン"""
        return {
            # 驚き
            'え': ['え？', 'どうした？', 'なに？', 'びっくり'],
            'えー': ['えー', 'まじで？', 'うそでしょ', 'びっくり'],
            'うそ': ['うそでしょ', 'まじで？', 'えー', 'びっくり'],
            'まじ': ['まじで？', 'うそでしょ', 'えー', 'ほんと？'],
            
            # 興奮
            'やったー': ['やったね！', 'おめでとう！', '最高！', 'すごい！'],
            'やった': ['やったね', 'おめでとう', '最高', 'すごい'],
            'わーい': ['わーい', 'やったー', '嬉しい', '最高'],
            'イェーイ': ['イェーイ', 'やったー', '最高', 'すごい'],
            
            # 落胆
            'はあ': ['はあ', 'お疲れさま', '大丈夫？', 'どうした？'],
            'あー': ['あー', 'そっか', 'どうした？', '大丈夫？'],
            'うーん': ['うーん', 'そうだね', 'どうだろ', 'むずかしいね'],
            'がーん': ['がーん', '残念', 'ショック', '大丈夫？'],
            
            # 考え中
            'んー': ['んー', 'うーん', 'どうだろ', 'むずかしいね'],
            'えーっと': ['えーっと', 'んー', 'うーん', 'どうだろ'],
            'あのー': ['あのー', 'えーっと', 'んー', 'どうしよう'],
        }
    
    def _get_time_weather_mega(self) -> Dict[str, List[str]]:
        """時間・天気メガパターン"""
        return {
            '今日': ['今日どうだった？', '今日もお疲れさま', 'どんな一日？'],
            '明日': ['明日何する？', '明日頑張って', '明日も頑張ろう'],
            '昨日': ['昨日どうだった？', '昨日お疲れさま', 'どんな感じ？'],
            '週末': ['週末いいね', '何する？', 'ゆっくりしよ', '楽しみ'],
            '平日': ['平日だね', 'お疲れさま', '頑張って', '大変だね'],
        }
    
    def _get_lifestyle_mega(self) -> Dict[str, List[str]]:
        """ライフスタイル・趣味メガパターン"""
        return {
            '映画': ['映画いいね', '何見る？', '面白そう', 'どんな？'],
            '音楽': ['音楽いいね', '何聞く？', 'いい曲', 'どんな？'],
            'ゲーム': ['ゲームか', '面白い？', 'どんなゲーム？', 'やってみたい'],
            '本': ['本いいね', '何読む？', '面白そう', 'どんな本？'],
            '料理': ['料理すごい', '何作る？', '美味しそう', 'いいね'],
            '運動': ['運動えらい', '何する？', 'がんばって', 'いいね'],
        }
    
    def _get_internet_mega(self) -> Dict[str, List[str]]:
        """インターネット・スラングメガパターン"""
        return {
            'www': ['草', 'ワロタ', '笑', 'ウケる'],
            '草': ['草', 'www', 'ワロタ', 'ウケる'],
            'ワロタ': ['ワロタ', '草', 'www', 'ウケる'],
            'ワロス': ['ワロス', 'ワロタ', '草', 'ウケる'],
            'おk': ['おk', 'OK', 'りょうかい', 'わかった'],
            'おけ': ['おk', 'OK', 'りょうかい', 'わかった'],
            'りょ': ['りょうかい', 'おk', 'わかった', 'OK'],
            'りょうかい': ['りょ', 'おk', 'わかった', 'OK'],
            'gj': ['GJ', 'ナイス', 'すごい', 'やるじゃん'],
            'ナイス': ['ナイス', 'いいね', 'すごい', 'GJ'],
            'ktkr': ['キタコレ', '来た', 'やった', '最高'],
            'キタコレ': ['ktkr', '来た', 'やった', '最高'],
            'kwsk': ['詳しく', '教えて', 'どういうこと？', 'もっと'],
        }
    
    def _initialize_context_responses(self) -> Dict[str, List[str]]:
        """文脈を考慮した応答"""
        return {
            'follow_up': {
                'positive': ['そうそう', 'いいね', 'すごいじゃん', 'よかった'],
                'negative': ['大丈夫？', 'そっか', '残念だね', 'つらいね'],
                'neutral': ['そうなんだ', 'なるほど', 'へー', 'そっか']
            }
        }
    
    def _initialize_slang_patterns(self) -> Dict[str, List[str]]:
        """スラング・若者言葉パターン"""
        return {
            'やばい': ['やばすぎ', 'マジやばい', 'ヤバイ', 'やば'],
            'エモい': ['エモすぎ', 'エモ', 'やばいエモい', '感動'],
            'バズる': ['バズってる', 'すごいバズり', 'やばいバズ', '人気'],
            'ガチ': ['ガチで', 'まじガチ', 'ガチすぎ', '本気'],
            'リアル': ['リアルに', 'まじリアル', 'リアルすぎ', 'ほんと'],
        }
    
    def _initialize_mood_responses(self) -> Dict[str, Dict[str, List[str]]]:
        """気分別応答パターン"""
        return {
            'happy': {
                'greeting': ['よう！', 'やあー！', 'おっす！', 'いい感じ！'],
                'agreement': ['そうそう！', 'だよね！', '最高！', 'やったー！']
            },
            'tired': {
                'greeting': ['よう...', 'おっす', 'お疲れ', 'はい...'],
                'agreement': ['そうだね', 'うん', 'まあね', 'そう...']
            },
            'excited': {
                'greeting': ['よーう！', 'やあああ！', 'おっすー！', '元気！'],
                'agreement': ['そうそうそう！', 'だよねー！', 'やばい！', 'すごい！']
            }
        }
    
    def get_mega_human_response(self, user_input: str, user_id: str = 'default') -> Optional[str]:
        """超人間的応答生成"""
        clean_input = user_input.strip().lower()
        
        # 会話履歴更新
        if user_id not in self.conversation_history:
            self.conversation_history[user_id] = []
        self.conversation_history[user_id].append(clean_input)
        
        # 気分調整
        self._adjust_mood(clean_input)
        
        # 直接パターンマッチ
        if clean_input in self.mega_patterns:
            responses = self.mega_patterns[clean_input]
            response = self._apply_personality(random.choice(responses))
            return response
        
        # 部分マッチング
        for pattern, responses in self.mega_patterns.items():
            if pattern in clean_input or clean_input in pattern:
                response = self._apply_personality(random.choice(responses))
                return response
        
        # スラングチェック
        for slang, responses in self.slang_patterns.items():
            if slang in clean_input:
                return random.choice(responses)
        
        return None
    
    def _adjust_mood(self, user_input: str):
        """気分調整"""
        positive_words = ['嬉しい', '楽しい', '最高', 'やったー', 'すごい']
        negative_words = ['疲れた', '悲しい', 'つらい', 'だめ', '最悪']
        
        if any(word in user_input for word in positive_words):
            self.personality_state['mood'] = 'happy'
            self.personality_state['energy'] = min(1.0, self.personality_state['energy'] + 0.1)
        elif any(word in user_input for word in negative_words):
            self.personality_state['mood'] = 'tired'
            self.personality_state['energy'] = max(0.3, self.personality_state['energy'] - 0.1)
    
    def _apply_personality(self, base_response: str) -> str:
        """パーソナリティ適用"""
        mood = self.personality_state['mood']
        energy = self.personality_state['energy']
        
        if mood == 'happy' and energy > 0.8:
            # 元気な時は感嘆符追加
            if not base_response.endswith(('!', '！')):
                base_response += '！'
        elif mood == 'tired' and energy < 0.5:
            # 疲れている時はトーンダウン
            base_response = base_response.replace('！', '').replace('!', '')
        
        return base_response
    
    def is_mega_human_chat(self, text: str) -> bool:
        """超人間的雑談対象か判定"""
        text = text.strip().lower()
        
        # 長すぎるのは対象外
        if len(text) > 30:
            return False
        
        # 機能要求は対象外
        excluded = ['todo', 'リスト', 'タスク', '教えて', '説明してください', 'どうやって', '方法']
        if any(ex in text for ex in excluded):
            return False
        
        # パターン存在チェック
        if text in self.mega_patterns:
            return True
            
        # 部分マッチチェック
        return any(pattern in text or text in pattern for pattern in self.mega_patterns.keys())
    
    def get_pattern_count(self) -> int:
        """総パターン数取得"""
        return len(self.mega_patterns)
    
    def get_personality_state(self) -> Dict:
        """現在のパーソナリティ状態"""
        return self.personality_state.copy()